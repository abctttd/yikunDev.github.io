<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>利用Hexo+Github Page搭建个人博客 - 基础篇</title>
      <link href="/articles/%E5%88%A9%E7%94%A8Hexo+Github%20Page%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2-%E5%9F%BA%E7%A1%80%E7%AF%87/"/>
      <url>/articles/%E5%88%A9%E7%94%A8Hexo+Github%20Page%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2-%E5%9F%BA%E7%A1%80%E7%AF%87/</url>
      
        <content type="html"><![CDATA[<p>当你正在阅读我的博客的时候，你可能会问：我的博客究竟是怎样搭建出来的？因此我发布了一个系列，教大家利用Hexo+Github Page搭建个人博客。</p><p>阅读完成本文后建议继续阅读：</p><p>利用Hexo+Github Page搭建个人博客 - 提高篇</p><p>利用Hexo+Github Page搭建个人博客 - SEO优化篇</p><a id="more"></a><h1 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h1><h2 id="安装Node-js"><a href="#安装Node-js" class="headerlink" title="安装Node.js"></a>安装Node.js</h2><p>首先，我们要安装Node.js，因为Hexo就是基于Node.js的。</p><p>下面是安装链接：</p><ul><li><p>Windows：<a href="https://nodejs.org/dist/v12.14.1/node-v12.14.1-x86.msi" target="_blank" rel="noopener">32位</a>  <a href="https://nodejs.org/dist/v12.14.1/node-v12.14.1-x64.msi" target="_blank" rel="noopener">64位</a></p></li><li><p>macOS：<a href="https://nodejs.org/dist/v12.14.1/node-v12.14.1.pkg" target="_blank" rel="noopener">64位</a></p></li><li><p>Linux：<a href="https://github.com/nodesource/distributions#debmanual" target="_blank" rel="noopener">由于Linux子系统太多了，读者请到这个网站自行查阅</a></p></li></ul><p>macOS可以用homebrew，指令如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install node</span><br></pre></td></tr></table></figure><h2 id="安装Git"><a href="#安装Git" class="headerlink" title="安装Git"></a>安装Git</h2><p>安装Git便于后期托管到Github Page</p><ul><li><p>Windows：<a href="https://git-scm.com/download/win" target="_blank" rel="noopener">到Git的官网下载Git Bash这个软件</a></p></li><li><p>macOS：</p><p> 可以使用homebrew，指令如下：</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install git</span><br></pre></td></tr></table></figure><p>   也可以使用<a href="https://git-scm.com/download/mac" target="_blank" rel="noopener">安装器</a></p><ul><li><p>Linux（Ubuntu，Debian等）：</p><p> 指令如下：</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install git-core</span><br></pre></td></tr></table></figure><ul><li><p>Linux（Fedora，Red Hat，Cent OS等）：</p><p> 指令如下：</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum install git-core</span><br></pre></td></tr></table></figure><p>  到此就可以正式安装Hexo了</p><h2 id="安装Hexo-1"><a href="#安装Hexo-1" class="headerlink" title="安装Hexo"></a>安装Hexo</h2><p>在终端（macOS&amp;Linux）或Git Bash（Windows）（后文全部简称为“终端”）运行如下2条指令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br><span class="line">npm install hexo</span><br></pre></td></tr></table></figure><h1 id="创建第一个网页"><a href="#创建第一个网页" class="headerlink" title="创建第一个网页"></a>创建第一个网页</h1><p>首先运行终端。</p><p>接着，我们要为自己的博客创建一个空文件夹，并且在终端cd至该文件夹。</p><p><img src="https://i.loli.net/2020/02/04/zcGIhuWepi1BkMv.png" alt=""></p><p>运行下面指令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2020/02/04/6H2MfdP3Oe7wTay.png" alt=""></p><p>请耐心等待一个世纪……</p><p>然后就下载好了。</p><p>接着运行指令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2020/02/04/wVDS6t8M9bUHdIm.png" alt=""></p><p>此时你的目录结构应该和我的是一样的：</p><p><img src="https://i.loli.net/2020/02/04/KjomqRVzpnFLIfA.png" alt=""></p><h1 id="使用一个主题"><a href="#使用一个主题" class="headerlink" title="使用一个主题"></a>使用一个主题</h1><p>在<a href="https://hexo.io/themes/" target="_blank" rel="noopener">Hexo官网</a>找到一个你喜欢的主题：</p><p>（截图时有些卡，显示不完整。。）</p><p><img src="https://i.loli.net/2020/02/04/1KTmWnqY8rZtIhc.png" alt=""></p><p>然后选择喜欢的点进去，比如我选择了<a href="https://github.com/theme-next/hexo-theme-next" target="_blank" rel="noopener">NexT主题</a>，在打开的页面选择Clone or download，再点击Download ZIP，下载ZIP至本地。</p><p><img src="https://i.loli.net/2020/02/04/VLxgOni5IvSouDP.png" alt=""></p><p>接着打开自己的博客文件夹，打开子文件夹theme，创建一个子文件夹，名字和你选择的theme的名字相同（比如我给文件夹就取名为next）</p><p>解压缩并将里面所有文件复制到刚才创建的文件夹，注意所有的隐藏文件都需要一并复制过去。我只知道macOS上在Finder按 ⌘ + ⇧ + . 就可以了，别的系统，请自行Google。</p><p>接着打开博客根目录的_comfig.yml（注意有2个_config.yml，博客根目录下的config文件被称为<strong>站点配置文件</strong>，themes/xxx下的config文件被称作<strong>主题配置文件</strong>），找到</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">themes:</span> <span class="string">landscape</span></span><br></pre></td></tr></table></figure><p>修改为：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">themes:</span> <span class="string">xxx</span></span><br></pre></td></tr></table></figure><p>（xxx为你选择的主题的名字）</p><p>注意yml的语法很严格，空格千万不能写错。</p><h1 id="预览博客页面"><a href="#预览博客页面" class="headerlink" title="预览博客页面"></a>预览博客页面</h1><p>接下来让我们学习如何预览博客界面：</p><p>打开终端，cd到自己博客文件夹的根目录。</p><p>指令为：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2020/02/04/oOVRrg5fiNEZjYH.png" alt=""></p><p>打开浏览器，输入<a href="localhost:4000">localhost:4000</a></p><p><img src="https://i.loli.net/2020/02/04/DESjYXkuqTdnQoP.png" alt=""></p><p>预览成功了^_^</p><h1 id="部署至Github-Page"><a href="#部署至Github-Page" class="headerlink" title="部署至Github Page"></a>部署至Github Page</h1><p>虽然目前我们已经完成了网站基础配置，但是目前有一个缺陷：必须使用hexo的服务器。换而言之，换一台电脑，就不会显示我们的网页了。因此，Github Page诞生了。要想使用Github Page，请从注册一个Github账号开始。</p><h2 id="注册一个Github账号"><a href="#注册一个Github账号" class="headerlink" title="注册一个Github账号"></a>注册一个Github账号</h2><p>首先打开<a href="https://github.com/" target="_blank" rel="noopener">Github官网</a>。</p><p>输入用户名等信息：</p><p><img src="https://i.loli.net/2020/02/04/IxaVh47s5ynWY1R.png" alt=""></p><p>接下来选择计划，有免费的和Pro的。贫穷使我清醒，然后，我的鼠标移到了Free上面……</p><p><img src="https://i.loli.net/2020/02/04/k4uhBVTEAUmNKwf.png" alt=""></p><p>接着是一些个人爱好：</p><p><img src="https://i.loli.net/2020/02/04/xP3i25zQhcd7KBn.png" alt=""></p><p>最后一步是验证邮箱：</p><p><img src="https://i.loli.net/2020/02/04/92hoKtqDOiJSdGU.png" alt=""></p><p><img src="https://i.loli.net/2020/02/04/wAkSVeK3E6il1PZ.png" alt=""></p><h2 id="创建一个存放博客的仓库"><a href="#创建一个存放博客的仓库" class="headerlink" title="创建一个存放博客的仓库"></a>创建一个存放博客的仓库</h2><p>打开首页，点击Start a Project，新建一个Repo（Repository的简写，仓库的意思）</p><p><img src="https://i.loli.net/2020/02/04/6lqZbFuP4UXVgAK.png" alt=""></p><p><img src="https://i.loli.net/2020/02/04/cs6XKl8JZntfDUp.png" alt=""></p><p>如果要使用Github Page，那么Repository Name是有要求的。它的格式必须满足：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">username.github.io</span><br></pre></td></tr></table></figure><p>其中，username与你的用户名必须<strong>完全一致（包括大小写）</strong>。因此我的repo name为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">abctttd.github.io</span><br></pre></td></tr></table></figure><p>Description是repo的描述，可选的。重要的一点来了：</p><p><strong>如果你是Free用户，那么一个Github Page的仓库只能选择Public</strong>。</p><p>因此我只能选择Public啦。</p><h2 id="本地配置"><a href="#本地配置" class="headerlink" title="本地配置"></a>本地配置</h2><blockquote><p>该部分请严格安装教程步骤。如果出现问题请点击评论区。</p></blockquote><p>首先，打开终端。</p><p>输入2条指令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name <span class="string">"Username"</span></span><br><span class="line">git config --global user.email <span class="string">"Useremail"</span></span><br></pre></td></tr></table></figure><p>例如我的是：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name <span class="string">"abctttd"</span></span><br><span class="line">git config --global user.email <span class="string">"trashclass@yeah.net"</span></span><br></pre></td></tr></table></figure><p>接着输入指令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C <span class="string">"Useremail"</span></span><br></pre></td></tr></table></figure><p>然后终端可能会询问你3个问题：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Enter file in which to save the key (&#x2F;Users&#x2F;harrywang&#x2F;.ssh&#x2F;id_rsa):</span><br><span class="line">Enter passphrase (empty for no passphrase):</span><br><span class="line">Enter same passphrase again:</span><br></pre></td></tr></table></figure><p>全部回车就好。</p><p><img src="https://i.loli.net/2020/02/04/czDYroI73J41PLe.png" alt=""></p><p>接着输入以下指令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~/.ssh</span><br><span class="line">cat id_rsa.pub</span><br></pre></td></tr></table></figure><p>复制所有东西下来。</p><p>接着打开Github官网，点击自己头像-&gt;Setting-&gt;SSH and GPG keys</p><p><img src="https://i.loli.net/2020/02/04/7nGWCdDi4mg8SRy.png" alt=""></p><p>点击New SSH keys，title随便取，key就拷贝刚才复制的乱码</p><p><img src="https://i.loli.net/2020/02/04/HJwEIiQStzyPDZG.png" alt=""></p><p>最后输入指令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure><p>如果被问到：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Are you sure you want to continue connecting (yes&#x2F;no)?</span><br></pre></td></tr></table></figure><p>输入yes，回车</p><p>如果显示：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Hi abctttd! You&#39;ve successfully authenticated, but GitHub does not provide shell access.</span><br></pre></td></tr></table></figure><p>就表示成功了。</p><p><img src="https://i.loli.net/2020/02/04/z97c5M82ItSjYmp.png" alt=""></p><h2 id="部署至自己的Repo"><a href="#部署至自己的Repo" class="headerlink" title="部署至自己的Repo"></a>部署至自己的Repo</h2><p>打开自己刚刚新建的repo，点击SSH并复制：</p><p><img src="https://i.loli.net/2020/02/04/CxApif7LtH4WKbS.png" alt=""></p><p>打开站点配置文件，将最后的deploy修改如下：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">'git'</span></span><br><span class="line">  <span class="attr">repo:</span> <span class="string">复制的地址</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">master</span></span><br></pre></td></tr></table></figure><p>安装插件hexo-deployer-git</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2020/02/04/6tNCWHrjzx4DI2P.png" alt=""></p><p><img src="https://i.loli.net/2020/02/04/1CKk7vTOriw6ynW.png" alt=""></p><p>最后运行3句命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure><p>让我们一起看一下部署完成的网站（网站名和Repo的名字一致）：</p><p><img src="https://i.loli.net/2020/02/04/zmW9cF4XeRib2H7.png" alt=""></p><h1 id="写文章"><a href="#写文章" class="headerlink" title="写文章"></a>写文章</h1><p>在终端切换到博客根目录，运行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new post <span class="string">"postname"</span></span><br></pre></td></tr></table></figure><p>接着打开博客根目录下的source文件夹，再打开_posts文件夹，会发现多出一个.md文件。</p><p>.md文件，就是Markdown文件。Hexo使用Markdown撰写博客。如果你不懂Markdown，可以看<a href="">这篇文章</a>。另外你还得找到一个好的Markdown编辑器，这里我推荐<a href="https://typora.io/">Typora</a>。</p><h1 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h1><p>完成整篇文章的操作后，其实你只需要记住3组指令：</p><ul><li>在本地预览网页：</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure><ul><li>同步到自己的网站：</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure><ul><li>写文章：</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new post <span class="string">"postname"</span></span><br></pre></td></tr></table></figure><p>​    </p>]]></content>
      
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> Github Page </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Android底部导航栏实战</title>
      <link href="/articles/Android%E5%BA%95%E9%83%A8%E5%AF%BC%E8%88%AA%E6%A0%8F%E5%AE%9E%E6%88%98/"/>
      <url>/articles/Android%E5%BA%95%E9%83%A8%E5%AF%BC%E8%88%AA%E6%A0%8F%E5%AE%9E%E6%88%98/</url>
      
        <content type="html"><![CDATA[<p>微信，QQ这些熟知的Android软件都有底部导航的功能。底部导航却是一个较难实现的功能。让我们通过这篇文章学习一下底部导航的用法。</p><p><strong>注：本文全部用Kotlin作为示范代码</strong></p><a id="more"></a><h1 id="从EmptyActivity开始"><a href="#从EmptyActivity开始" class="headerlink" title="从EmptyActivity开始"></a>从EmptyActivity开始</h1><p>首先我们创建一个BottomBarTest项目。</p><p>然后新建一个MainActivity。我们暂且不需要自动Generate Layout文件。</p><p><img src="https://i.loli.net/2020/01/29/hPdtFcyQoTsXnBM.png" alt=""></p><p>创建layout_main文件，选择relativelayout<br><img src="https://i.loli.net/2020/01/29/fFkpsMKGEyebXRt.png" alt=""></p><p>在build.gradle添加如下依赖</p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">implementation <span class="string">'com.google.android.material:material:1.0.0'</span></span><br><span class="line">implementation <span class="string">'androidx.constraintlayout:constraintlayout:1.1.3'</span></span><br><span class="line">implementation <span class="string">'androidx.vectordrawable:vectordrawable:1.0.1'</span></span><br><span class="line">implementation <span class="string">'androidx.navigation:navigation-fragment:2.0.0'</span></span><br><span class="line">implementation <span class="string">'androidx.navigation:navigation-ui:2.0.0'</span></span><br><span class="line">implementation <span class="string">'androidx.lifecycle:lifecycle-extensions:2.0.0'</span></span><br><span class="line">implementation <span class="string">'androidx.navigation:navigation-fragment-ktx:2.0.0'</span></span><br><span class="line">implementation <span class="string">'androidx.navigation:navigation-ui-ktx:2.0.0'</span></span><br></pre></td></tr></table></figure><p>这几个库什么作用我并不想解释</p><blockquote><p>它不重要</p></blockquote><p>老规矩点Sync Now同步<br><img src="https://i.loli.net/2020/01/29/aALbp9NVvnT2hjo.png" alt=""></p><h1 id="添加底部导航栏"><a href="#添加底部导航栏" class="headerlink" title="添加底部导航栏"></a>添加底部导航栏</h1><p>首先添加menu文件menu_main.xml。menu的用法我并不想多讲，直接上代码：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">menu</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">item</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/navigation_google"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:icon</span>=<span class="string">"@drawable/social_google"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:title</span>=<span class="string">"Google"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">item</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/navigation_stackflow"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:icon</span>=<span class="string">"@drawable/social_stackflow"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:title</span>=<span class="string">"StackOverflow"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">item</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/navigation_github"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:icon</span>=<span class="string">"@drawable/social_github"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:title</span>=<span class="string">"Github"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">menu</span>&gt;</span></span><br></pre></td></tr></table></figure><p>图片资源在百度网盘里。（说到百度网盘就恨得不得了每次下载资源慢的不得了）可惜我的Github账号挂了（长叹)…<a href="https://pan.baidu.com/s/16BMO1tG6v7pAFupAvvi16g" target="_blank" rel="noopener">拿去就是这个</a>提取码: dmhv</p><p>如果你也要选择精美的icon建议用<a href="https://www.iconfont.cn/collections/detail?spm=a313x.7781069.1998910419.de12df413&cid=16472" target="_blank" rel="noopener">阿里巴巴图标资源库</a></p><p>选择这三个icon就是为了摆明：遇到问题让Google+StackOverFlow+Github成为习惯，而不是用百度或者CSDN</p><p>如果你看到类似于<code>Hardcoded string &quot;Google&quot;, should use @string resourse</code>的警告的话，下面有一个解决方案</p><blockquote><p>不用管它</p></blockquote><p>接着在主布局中添加导航栏：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">RelativeLayout</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:app</span>=<span class="string">"http://schemas.android.com/apk/res-auto"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">com.google.android.material.bottomnavigation.BottomNavigationView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/nav_view"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"?attr/actionBarSize"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_marginStart</span>=<span class="string">"0dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_marginEnd</span>=<span class="string">"0dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_alignParentBottom</span>=<span class="string">"true"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:background</span>=<span class="string">"?android:attr/windowBackground"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:menu</span>=<span class="string">"@menu/menu_main"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">RelativeLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><p>我们把导航栏的高度设置为ActionBar的默认高度（这是为了最后一步使用），因为是底部导航栏，所以设置alignParentBottom为true。</p><h1 id="利用碎片完成应用上半身"><a href="#利用碎片完成应用上半身" class="headerlink" title="利用碎片完成应用上半身"></a>利用碎片完成应用上半身</h1><p><strong>前两步是最简单的！！！</strong></p><p><img src="https://i.loli.net/2020/01/29/pvQAY7hj9sItN1y.png" alt=""></p><p>首先我们在MainActivity的同级目录下创建ui目录。显然是存放碎片用的。接着建三个目录google，github和stack，用于存放三个按钮的界面碎片</p><p>碎片的代码还是很好理解的，以google文件夹为例，我们建立两个文件，GoogleFragment.kt，GoogleViewModel.kt</p><p>代码如下：</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">GoogleFragment</span> : <span class="type">Fragment</span></span>() &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">lateinit</span> <span class="keyword">var</span> googleViewModel: GoogleViewModel</span><br><span class="line"></span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onCreateView</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">        inflater: <span class="type">LayoutInflater</span>,</span></span></span><br><span class="line"><span class="function"><span class="params">        container: <span class="type">ViewGroup</span>?,</span></span></span><br><span class="line"><span class="function"><span class="params">        savedInstanceState: <span class="type">Bundle</span>?</span></span></span><br><span class="line"><span class="function"><span class="params">    )</span></span>: View? &#123;</span><br><span class="line">        googleViewModel =</span><br><span class="line">            ViewModelProviders.of(<span class="keyword">this</span>).<span class="keyword">get</span>(GoogleViewModel::<span class="class"><span class="keyword">class</span>.<span class="title">java</span>)</span></span><br><span class="line">        <span class="keyword">val</span> root = inflater.inflate(R.layout.fragment_google, container, <span class="literal">false</span>)</span><br><span class="line">        <span class="keyword">val</span> textView: TextView = root.findViewById(R.id.text_google)</span><br><span class="line">        googleViewModel.text.observe(<span class="keyword">this</span>, Observer &#123;</span><br><span class="line">            textView.text = it</span><br><span class="line">        &#125;)</span><br><span class="line">        <span class="keyword">return</span> root</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">GoogleViewModel</span> : <span class="type">ViewModel</span></span>() &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">val</span> _text = MutableLiveData&lt;String&gt;().apply &#123;</span><br><span class="line">        value = <span class="string">"Welcome to Google"</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">val</span> text: LiveData&lt;String&gt; = _text</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>就是简单的碎片调用，没什么好说的。接着创建碎片布局文件fragment_google.xml，代码如下：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:orientation</span>=<span class="string">"vertical"</span> <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/text_google"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:textSize</span>=<span class="string">"30sp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:textColor</span>=<span class="string">"#000000"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_marginTop</span>=<span class="string">"20dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_marginLeft</span>=<span class="string">"20dp"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><p>我们创建了一个基本布局。可以看到这就是碎片的基本布局了（。。一个textview而已<br>以此类推完成另外2个文件夹的代码</p><h1 id="显示一个能够切换界面的碎片"><a href="#显示一个能够切换界面的碎片" class="headerlink" title="显示一个能够切换界面的碎片"></a>显示一个能够切换界面的碎片</h1><p>目前运行项目，你得到的界面应该是这样的</p><p><img src="https://i.loli.net/2020/01/29/JrpXiHYFeBdAbD7.png" alt=""></p><p>原因很简单啊，我们还没有在MainActivity.kt中写任何东西。现在我们需要完成最后的配置。</p><p>首先，为了能够放置一个动态Fragment，我们首先需要新建一个navigation。在res目录下新建一个navigation文件夹</p><p>然后新建mobile_navigation.xml<br><img src="https://i.loli.net/2020/01/29/73DphAtXHOlNWZz.png" alt=""><br>代码如下：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">navigation</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:app</span>=<span class="string">"http://schemas.android.com/apk/res-auto"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:tools</span>=<span class="string">"http://schemas.android.com/tools"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:id</span>=<span class="string">"@+id/mobile_navigation"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">app:startDestination</span>=<span class="string">"@+id/navigation_google"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">fragment</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/navigation_google"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:name</span>=<span class="string">"com.example.bottombartest.ui.google.GoogleFragment"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:label</span>=<span class="string">"Google"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">tools:layout</span>=<span class="string">"@layout/fragment_google"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">fragment</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/navigation_github"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:name</span>=<span class="string">"com.example.bottombartest.ui.github.GithubFragment"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:label</span>=<span class="string">"Github"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">tools:layout</span>=<span class="string">"@layout/fragment_github"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">fragment</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/navigation_stackflow"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:name</span>=<span class="string">"com.example.bottombartest.ui.stack.StackFragment"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:label</span>=<span class="string">"StackOverflow"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">tools:layout</span>=<span class="string">"@layout/fragment_stack"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">navigation</span>&gt;</span></span><br></pre></td></tr></table></figure><p>我们平时很少用到navigation控件。其实不难理解，navigation控件就是可以用于切换的控件。我们放入3个fragment以便切换。有一点就是android:lable属性。这个属性指的是ActionBar上的title。</p><p>写完了navigation我们要在layout_main里添加这个控件。可以把它想象成一个碎片。添加方法如下：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">fragment</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/nav_host_fragment"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:name</span>=<span class="string">"androidx.navigation.fragment.NavHostFragment"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_marginBottom</span>=<span class="string">"?attr/actionBarSize"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:defaultNavHost</span>=<span class="string">"true"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:navGraph</span>=<span class="string">"@navigation/mobile_navigation"</span> /&gt;</span></span><br></pre></td></tr></table></figure><p>最后我们要在mainactivity里注册这些控件：</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> : <span class="type">AppCompatActivity</span></span>() &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onCreate</span><span class="params">(savedInstanceState: <span class="type">Bundle</span>?)</span></span> &#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState)</span><br><span class="line">        setContentView(R.layout.layout_main)</span><br><span class="line">        <span class="keyword">val</span> navView: BottomNavigationView = findViewById(R.id.nav_view)</span><br><span class="line">        <span class="keyword">val</span> navController = findNavController(R.id.nav_host_fragment)</span><br><span class="line">        <span class="keyword">val</span> appBarConfiguration = AppBarConfiguration(</span><br><span class="line">            setOf(</span><br><span class="line">                R.id.navigation_google, R.id.navigation_github, R.id.navigation_stackflow</span><br><span class="line">            )</span><br><span class="line">        )</span><br><span class="line">        setupActionBarWithNavController(navController, appBarConfiguration)</span><br><span class="line">        navView.setupWithNavController(navController)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>效果如下：<br><img src="https://i.loli.net/2020/01/29/PbOJuYAmXgVEhxH.png" alt=""><br><img src="https://i.loli.net/2020/01/29/eAtkaXC6RfIJi3G.png" alt=""></p><p>读完这篇文章你一定很有收获。我们详细学习了底部导航栏的用法。由于Github账号出错的问题，我无法把这个项目上传到Github，大家不可以fork和提交PR，请大家原谅一下。</p>]]></content>
      
      
      <categories>
          
          <category> Android </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Android </tag>
            
            <tag> Kotlin </tag>
            
            <tag> Android-Fragment </tag>
            
            <tag> Android-Navigation </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>免费激活Jetbrains全家桶</title>
      <link href="/articles/%E5%85%8D%E8%B4%B9%E6%BF%80%E6%B4%BBJetbrains%E5%85%A8%E5%AE%B6%E6%A1%B6/"/>
      <url>/articles/%E5%85%8D%E8%B4%B9%E6%BF%80%E6%B4%BBJetbrains%E5%85%A8%E5%AE%B6%E6%A1%B6/</url>
      
        <content type="html"><![CDATA[<p>大家好，今天我将要教大家如何免费激活Jetbrains全家桶。Jetbrains拥有很多易用的软件，如IDEA，PyCharm，CLion等等。<del>但是全部是付费的</del>。那么如何免费激活呢？那么请接着往下看。</p><a id="more"></a><p>我们以AppCode为例，激活一下AppCode软件。</p><h1 id="资源下载"><a href="#资源下载" class="headerlink" title="资源下载"></a>资源下载</h1><p>首先请在百度网盘上下载agent压缩包，待会儿需要使用。<br><a href="https://pan.baidu.com/s/1_5R_zq1IxR6-e-XZ92qFuQ" target="_blank" rel="noopener">百度网盘链接;密码:y6sj</a><br>解压缩后应该有这些文件：<br><img src="https://i.loli.net/2020/01/31/JWRwIDqOoy6d4M7.png" alt=""><br>把jetbrains-agent.jar存储在电脑的某个文件夹（注意永远不能更改这个文件），我存储在了/Users/harrywang/Desktop/JetbrainsProjects/NoChanging这个文件夹里</p><h1 id="软件激活"><a href="#软件激活" class="headerlink" title="软件激活"></a>软件激活</h1><p>打开AppCode，此时界面应该是这样：<br><img src="https://i.loli.net/2020/01/31/VQspWt41mfq785v.png" alt=""><br>显示正在试用，写上了到期时间（本文为2019年11月18日）<br>在弹出的窗口中点击Configure，在弹出的窗口中选择“Edit Custom VM Options…”<br><img src="https://i.loli.net/2020/01/31/ty4dQwGEN97eulR.png" alt=""><br><img src="https://i.loli.net/2020/01/31/oPM7vEfdHnWgqTm.png" alt=""></p><p>在VMOptions中填写：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-javaagent:你的jar的路径</span><br></pre></td></tr></table></figure><p>如我的是：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-javaagent:&#x2F;Users&#x2F;harrywang&#x2F;Desktop&#x2F;JetbrainsProjects&#x2F;NoChanging&#x2F;jetbrains-agent.jar</span><br></pre></td></tr></table></figure><p>然后<strong>确认路径正确</strong>（这点非常重要！！！），点击Save，重启AppCode软件，点击Configure，再点击“Manage License…”，选择Activation Code并且输入：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">3AGXEJXFK9-eyJsaWNlbnNlSWQiOiIzQUdYRUpYRks5IiwibGljZW5zZWVOYW1lIjoiaHR0cHM6Ly96aGlsZS5pbyIsImFzc2lnbmVlTmFtZSI6IiIsImFzc2lnbmVlRW1haWwiOiIiLCJsaWNlbnNlUmVzdHJpY3Rpb24iOiIiLCJjaGVja0NvbmN1cnJlbnRVc2UiOmZhbHNlLCJwcm9kdWN0cyI6W3siY29kZSI6IklJIiwiZmFsbGJhY2tEYXRlIjoiMjA4OS0wNy0wNyIsInBhaWRVcFRvIjoiMjA4OS0wNy0wNyJ9LHsiY29kZSI6IkFDIiwiZmFsbGJhY2tEYXRlIjoiMjA4OS0wNy0wNyIsInBhaWRVcFRvIjoiMjA4OS0wNy0wNyJ9LHsiY29kZSI6IkRQTiIsImZhbGxiYWNrRGF0ZSI6IjIwODktMDctMDciLCJwYWlkVXBUbyI6IjIwODktMDctMDcifSx7ImNvZGUiOiJQUyIsImZhbGxiYWNrRGF0ZSI6IjIwODktMDctMDciLCJwYWlkVXBUbyI6IjIwODktMDctMDcifSx7ImNvZGUiOiJHTyIsImZhbGxiYWNrRGF0ZSI6IjIwODktMDctMDciLCJwYWlkVXBUbyI6IjIwODktMDctMDcifSx7ImNvZGUiOiJETSIsImZhbGxiYWNrRGF0ZSI6IjIwODktMDctMDciLCJwYWlkVXBUbyI6IjIwODktMDctMDcifSx7ImNvZGUiOiJDTCIsImZhbGxiYWNrRGF0ZSI6IjIwODktMDctMDciLCJwYWlkVXBUbyI6IjIwODktMDctMDcifSx7ImNvZGUiOiJSUzAiLCJmYWxsYmFja0RhdGUiOiIyMDg5LTA3LTA3IiwicGFpZFVwVG8iOiIyMDg5LTA3LTA3In0seyJjb2RlIjoiUkMiLCJmYWxsYmFja0RhdGUiOiIyMDg5LTA3LTA3IiwicGFpZFVwVG8iOiIyMDg5LTA3LTA3In0seyJjb2RlIjoiUkQiLCJmYWxsYmFja0RhdGUiOiIyMDg5LTA3LTA3IiwicGFpZFVwVG8iOiIyMDg5LTA3LTA3In0seyJjb2RlIjoiUEMiLCJmYWxsYmFja0RhdGUiOiIyMDg5LTA3LTA3IiwicGFpZFVwVG8iOiIyMDg5LTA3LTA3In0seyJjb2RlIjoiUk0iLCJmYWxsYmFja0RhdGUiOiIyMDg5LTA3LTA3IiwicGFpZFVwVG8iOiIyMDg5LTA3LTA3In0seyJjb2RlIjoiV1MiLCJmYWxsYmFja0RhdGUiOiIyMDg5LTA3LTA3IiwicGFpZFVwVG8iOiIyMDg5LTA3LTA3In0seyJjb2RlIjoiREIiLCJmYWxsYmFja0RhdGUiOiIyMDg5LTA3LTA3IiwicGFpZFVwVG8iOiIyMDg5LTA3LTA3In0seyJjb2RlIjoiREMiLCJmYWxsYmFja0RhdGUiOiIyMDg5LTA3LTA3IiwicGFpZFVwVG8iOiIyMDg5LTA3LTA3In0seyJjb2RlIjoiUlNVIiwiZmFsbGJhY2tEYXRlIjoiMjA4OS0wNy0wNyIsInBhaWRVcFRvIjoiMjA4OS0wNy0wNyJ9XSwiaGFzaCI6IjEyNzk2ODc3LzAiLCJncmFjZVBlcmlvZERheXMiOjcsImF1dG9Qcm9sb25nYXRlZCI6ZmFsc2UsImlzQXV0b1Byb2xvbmdhdGVkIjpmYWxzZX0&#x3D;-WGTHs6XpDhr+uumvbwQPOdlxWnQwgnGaL4eRnlpGKApEEkJyYvNEuPWBSrQkPmVpim&#x2F;8Sab6HV04Dw3IzkJT0yTc29sPEXBf69+7y6Jv718FaJu4MWfsAk&#x2F;ZGtNIUOczUQ0iGKKnSSsfQ&#x2F;3UoMv0q&#x2F;yJcfvj+me5Zd&#x2F;gfaisCCMUaGjB&#x2F;lWIPpEPzblDtVJbRexB1MALrLCEoDv3ujcPAZ7xWb54DiZwjYhQvQ+CvpNNF2jeTku7lbm5v+BoDsdeRq7YBt9ANLUKPr2DahcaZ4gctpHZXhG96IyKx232jYq9jQrFDbQMtVr3E+GsCekMEWSD&#x2F;&#x2F;dLT+HuZdc1sAIYrw&#x3D;&#x3D;-MIIElTCCAn2gAwIBAgIBCTANBgkqhkiG9w0BAQsFADAYMRYwFAYDVQQDDA1KZXRQcm9maWxlIENBMB4XDTE4MTEwMTEyMjk0NloXDTIwMTEwMjEyMjk0NlowaDELMAkGA1UEBhMCQ1oxDjAMBgNVBAgMBU51c2xlMQ8wDQYDVQQHDAZQcmFndWUxGTAXBgNVBAoMEEpldEJyYWlucyBzLnIuby4xHTAbBgNVBAMMFHByb2QzeS1mcm9tLTIwMTgxMTAxMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA5ndaik1GD0nyTdqkZgURQZGW+RGxCdBITPXIwpjhhaD0SXGa4XSZBEBoiPdY6XV6pOfUJeyfi9dXsY4MmT0D+sKoST3rSw96xaf9FXPvOjn4prMTdj3Ji3CyQrGWeQU2nzYqFrp1QYNLAbaViHRKuJrYHI6GCvqCbJe0LQ8qqUiVMA9wG&#x2F;PQwScpNmTF9Kp2Iej+Z5OUxF33zzm+vg&#x2F;nYV31HLF7fJUAplI&#x2F;1nM+ZG8K+AXWgYKChtknl3sW9PCQa3a3imPL9GVToUNxc0wcuTil8mqveWcSQCHYxsIaUajWLpFzoO2AhK4mfYBSStAqEjoXRTuj17mo8Q6M2SHOcwIDAQABo4GZMIGWMAkGA1UdEwQCMAAwHQYDVR0OBBYEFGEpG9oZGcfLMGNBkY7SgHiMGgTcMEgGA1UdIwRBMD+AFKOetkhnQhI2Qb1t4Lm0oFKLl&#x2F;GzoRykGjAYMRYwFAYDVQQDDA1KZXRQcm9maWxlIENBggkA0myxg7KDeeEwEwYDVR0lBAwwCgYIKwYBBQUHAwEwCwYDVR0PBAQDAgWgMA0GCSqGSIb3DQEBCwUAA4ICAQBonMu8oa3vmNAa4RQP8gPGlX3SQaA3WCRUAj6Zrlk8AesKV1YSkh5D2l+yUk6njysgzfr1bIR5xF8eup5xXc4&#x2F;G7NtVYRSMvrd6rfQcHOyK5UFJLm+8utmyMIDrZOzLQuTsT8NxFpbCVCfV5wNRu4rChrCuArYVGaKbmp9ymkw1PU6+HoO5i2wU3ikTmRv8IRjrlSStyNzXpnPTwt7bja19ousk56r40SmlmC04GdDHErr0ei2UbjUua5kw71Qn9g02tL9fERI2sSRjQrvPbn9INwRWl5+k05mlKekbtbu2ev2woJFZK4WEXAd&#x2F;GaAdeZZdumv8T2idDFL7cAirJwcrbfpawPeXr52oKTPnXfi0l5+g9Gnt&#x2F;wfiXCrPElX6ycTR6iL3GC2VR4jTz6YatT4Ntz59&#x2F;THOT7NJQhr6AyLkhhJCdkzE2cob&#x2F;KouVp4ivV7Q3Fc6HX7eepHAAF&#x2F;DpxwgOrg9smX6coXLgfp0b1RU2u&#x2F;tUNID04rpNxTMueTtrT8WSskqvaJd3RH8r7cnRj6Y2hltkja82HlpDURDxDTRvv+krbwMr26SB&#x2F;40BjpMUrDRCeKuiBahC0DCoU&#x2F;4+ze1l94wVUhdkCfL0GpJrMSCDEK+XEurU18Hb7WT+ThXbkdl6VpFdHsRvqAnhR2g4b+Qzgidmuky5NUZVfEaZqV&#x2F;g&#x3D;&#x3D;</span><br></pre></td></tr></table></figure><p>（就是code.txt的内容）<br><img src="https://i.loli.net/2020/01/31/UEosCbcflnhDJ5v.png" alt=""><br>点击OK即可。<br>再次重启AppCode发现有了变化：<br><img src="https://i.loli.net/2020/01/31/J8FifBwCWOcHg4n.png" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> 软件激活 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Jetbrains </tag>
            
            <tag> 软件激活 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
